const docEl=document.documentElement;
const themeButton=document.querySelector('.theme-toggle');
const navToggle=document.querySelector('.nav-toggle');
const nav=document.querySelector('.site-nav');
const projectsGrid=document.getElementById('projects-grid');
const projectTemplate=document.getElementById('project-card-template');
const yearTarget=document.querySelector('[data-year]');
const avatarImg=document.querySelector('.avatar img');
const reduceMotion=window.matchMedia('(prefers-reduced-motion: reduce)').matches;
const systemTheme=window.matchMedia('(prefers-color-scheme: dark)');
const THEME_KEY='theme-preference';
const themeCycle=['light','dark','system'];
const getStoredTheme=()=>{try{return localStorage.getItem(THEME_KEY)||'system';}catch(e){return 'system';}};
const resolveTheme=(mode)=>mode==='system'?(systemTheme.matches?'dark':'light'):mode;
const applyTheme=(mode)=>{const applied=resolveTheme(mode);docEl.dataset.theme=applied;if(themeButton){themeButton.dataset.mode=mode;const nextMode=themeCycle[(themeCycle.indexOf(mode)+1)%themeCycle.length];themeButton.setAttribute('aria-label',`Activate ${nextMode} theme`);themeButton.setAttribute('title',`Switch to ${nextMode} theme`);}};
const watchSystemChange=()=>{const handler=()=>{if((themeButton?.dataset.mode||'system')==='system')applyTheme('system');};if(systemTheme.addEventListener)systemTheme.addEventListener('change',handler);else if(systemTheme.addListener)systemTheme.addListener(handler);};
if(themeButton){applyTheme(getStoredTheme());watchSystemChange();themeButton.addEventListener('click',()=>{const current=themeButton.dataset.mode||getStoredTheme();const next=themeCycle[(themeCycle.indexOf(current)+1)%themeCycle.length];try{localStorage.setItem(THEME_KEY,next);}catch(e){}applyTheme(next);});}
if(yearTarget)yearTarget.textContent=new Date().getFullYear();
if(navToggle&&nav){navToggle.addEventListener('click',()=>{const expanded=navToggle.getAttribute('aria-expanded')==='true';navToggle.setAttribute('aria-expanded',String(!expanded));nav.classList.toggle('open',!expanded);});nav.querySelectorAll('a').forEach((link)=>link.addEventListener('click',()=>{navToggle.setAttribute('aria-expanded','false');nav.classList.remove('open');}));}
if(avatarImg){avatarImg.addEventListener('error',()=>{const wrapper=avatarImg.closest('.avatar');if(!wrapper||wrapper.classList.contains('is-fallback'))return;wrapper.classList.add('is-fallback');const fallback=document.createElement('span');fallback.className='avatar-fallback';fallback.textContent=wrapper.dataset.initials||'AM';fallback.setAttribute('aria-hidden','true');wrapper.append(fallback);wrapper.setAttribute('role','img');wrapper.setAttribute('aria-label','Initials for Abdul Wahid Murshid');});}
const revealSections=()=>{const targets=document.querySelectorAll('[data-reveal]');if(!targets.length)return;if(reduceMotion||!('IntersectionObserver'in window)){targets.forEach((el)=>el.classList.add('is-visible'));return;}const observer=new IntersectionObserver((entries)=>{entries.forEach((entry)=>{if(entry.isIntersecting){entry.target.classList.add('is-visible');observer.unobserve(entry.target);}})},{threshold:0.12});targets.forEach((el)=>observer.observe(el));};
revealSections();
const fallbackProjects=[{name:'azure-labs-toolkit',description:'Infrastructure blueprints and scripts for Azure learning environments.',html_url:'https://github.com/ammaarM/azure-labs-toolkit',homepage:'',stargazers_count:12,topics:['azure','terraform','iac'],updated_at:'2024-01-12T00:00:00Z'},{name:'k8s-deployment-templates',description:'Opinionated Kubernetes deployment templates for rapid app delivery.',html_url:'https://github.com/ammaarM/k8s-deployment-templates',homepage:'',stargazers_count:8,topics:['kubernetes','helm','devops'],updated_at:'2023-11-02T00:00:00Z'},{name:'platform-observability-kit',description:'Dashboards and alerts that surface platform health signals.',html_url:'https://github.com/ammaarM/platform-observability-kit',homepage:'',stargazers_count:5,topics:['observability','dashboards'],updated_at:'2023-09-18T00:00:00Z'}];
const renderProjects=(projects)=>{projectsGrid.innerHTML='';if(!projects.length){const empty=document.createElement('p');empty.textContent='No projects to show right now. Check back soon!';projectsGrid.append(empty);return;}projects.forEach((project)=>{const card=projectTemplate.content.firstElementChild.cloneNode(true);card.querySelector('.project-title').textContent=project.name;const stars=card.querySelector('.project-stars');stars.textContent=`⭐ ${project.stargazers_count}`;stars.setAttribute('aria-label',`${project.stargazers_count} stars`);card.querySelector('.project-description').textContent=project.description||'A project by Abdul Wahid Murshid.';const tags=card.querySelector('.project-tags');tags.innerHTML='';(project.topics||[]).slice(0,6).forEach((topic)=>{const tag=document.createElement('span');tag.textContent=topic;tags.append(tag);});if(!tags.children.length)tags.remove();const repoLink=card.querySelector('.project-repo');repoLink.href=project.html_url;repoLink.setAttribute('aria-label',`${project.name} repository`);const demoLink=card.querySelector('.project-demo');if(project.homepage){demoLink.href=project.homepage;demoLink.hidden=false;}projectsGrid.append(card);});};
const projectSorter=(a,b)=>b.stargazers_count!==a.stargazers_count?b.stargazers_count-a.stargazers_count:new Date(b.updated_at).getTime()-new Date(a.updated_at).getTime();
const loadProjects=async()=>{if(!projectsGrid||!projectTemplate)return;const loading=document.createElement('p');loading.textContent='Loading projects…';loading.className='project-loading';projectsGrid.append(loading);try{const response=await fetch('https://api.github.com/users/ammaarM/repos?per_page=100',{headers:{Accept:'application/vnd.github+json'}});if(!response.ok)throw new Error('Network response not ok');const data=await response.json();const filtered=data.filter((repo)=>!repo.fork&&!repo.archived).sort(projectSorter).slice(0,12);renderProjects(filtered.length?filtered:fallbackProjects);}catch(error){console.error('GitHub projects failed to load',error);renderProjects(fallbackProjects);}};
loadProjects();
