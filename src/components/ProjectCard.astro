---
import { Image, Picture } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import fallbackGraphic from '../assets/images/project-fallback.svg';

interface Props {
  project: CollectionEntry<'projects'>;
  variant?: 'default' | 'featured';
  revealIndex?: number;
}

const { project, variant = 'default', revealIndex } = Astro.props as Props;
const data = project.data;
const { Content } = await project.render();

const classes = ['project-card'];
if (variant === 'featured') {
  classes.push('featured-card');
}

const initials = data.title
  .split(/[^A-Za-z0-9]+/)
  .filter(Boolean)
  .map((chunk) => chunk.charAt(0).toUpperCase())
  .join('')
  .slice(0, 3) || 'PR';

const accentPalette = ['#2f6df6', '#7B42BC', '#2496ED', '#68a0ff', '#3f4a60'];
const fallbackAccent = accentPalette[Math.abs(data.sortOrder ?? 0) % accentPalette.length];

const tech = data.tech ?? [];
const image = data.image;
const imageAlt = data.imageAlt ?? `Preview of ${data.title}`;
const isFeatured = variant === 'featured';
const styleMap: Record<string, string | number> = {
  '--project-accent': fallbackAccent,
};

if (typeof revealIndex === 'number') {
  styleMap['--stagger-index'] = revealIndex;
}
const projectLink = data.url ?? data.repo;
---
<article class={classes.join(' ')} role="listitem" style={styleMap} data-reveal-item>
  <div class="project-inner">
    <div class="project-media" data-animate>
      {image ? (
        <Picture
          class="project-preview"
          src={image}
          alt={imageAlt}
          widths={[480, 720, 1080]}
          sizes="(max-width: 900px) 92vw, 680px"
          formats={["avif", "webp", "png"]}
          loading="lazy"
        />
      ) : (
        <div class="project-fallback" aria-hidden="true">
          <Image
            class="project-fallback-image"
            src={fallbackGraphic}
            alt=""
            width={200}
            height={200}
            loading="lazy"
            decoding="async"
          />
          <span class="favicon-wrap" aria-hidden="true">{initials}</span>
        </div>
      )}
    </div>
    <div class="project-body" data-animate>
      <header class="project-header">
        <h3 class="project-title">{data.title}</h3>
        {data.description && <p class="project-meta">{data.description}</p>}
      </header>
      <div class="project-description prose">
        <Content />
      </div>
      {tech.length > 0 && (
        <ul class="project-tags" aria-label="Topics">
          {tech.map((tag) => (
            <li>
              <span>{tag}</span>
            </li>
          ))}
        </ul>
      )}
      <div class={isFeatured ? 'project-links featured-links' : 'project-links'}>
        {data.url && (
          <a class={isFeatured ? 'btn' : 'text-link'} href={data.url} target="_blank" rel="noreferrer">
            {isFeatured ? 'Visit site' : 'Demo'}
          </a>
        )}
        {data.repo && (
          <a class={isFeatured ? 'btn ghost' : 'text-link'} href={data.repo} target="_blank" rel="noreferrer">
            {isFeatured ? 'View repo' : 'Repo'}
          </a>
        )}
        {!data.url && !data.repo && projectLink && (
          <a class="text-link" href={projectLink}>
            Learn more
          </a>
        )}
      </div>
    </div>
  </div>
</article>
